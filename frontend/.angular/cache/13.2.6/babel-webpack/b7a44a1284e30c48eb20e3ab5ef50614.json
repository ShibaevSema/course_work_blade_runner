{"ast":null,"code":"import { DialogService } from 'primeng/dynamicdialog';\nimport { SelectReplicantPopupComponent } from '../popups/select-replicant-popup/select-replicant-popup.component';\nimport { SelectBladeRunnerPopupComponent } from '../popups/select-blade-runner-popup/select-blade-runner-popup.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\nimport * as i2 from \"primeng/dynamicdialog\";\nexport let NewBladeRunnerTaskComponent = /*#__PURE__*/(() => {\n  class NewBladeRunnerTaskComponent {\n    constructor(messageService, dialogService) {\n      this.messageService = messageService;\n      this.dialogService = dialogService;\n    }\n\n    ngOnInit() {}\n\n    selectReplicant() {\n      const ref = this.dialogService.open(SelectReplicantPopupComponent, {\n        header: 'Выберите репликанта',\n        width: '80%'\n      });\n      ref.onClose.subscribe(replicant => {\n        if (replicant) {\n          this.replicant = replicant;\n          this.replicantName = '[' + replicant.id + '] ' + replicant.fullName;\n        }\n      });\n    }\n\n    selectBladeRunner() {\n      const ref = this.dialogService.open(SelectBladeRunnerPopupComponent, {\n        header: 'Выберите Бегущего по лезвию',\n        width: '80%'\n      });\n      ref.onClose.subscribe(bladeRunner => {\n        if (bladeRunner) {\n          this.bladeRunner = bladeRunner;\n          this.bladeRunnerName = '[' + bladeRunner.humanoid.id + '] ' + bladeRunner.humanoid.fullName;\n        }\n      });\n    }\n\n    confirm() {\n      if (this.replicantName == undefined || this.bladeRunnerName == undefined) {\n        this.onError('Вы не выбрали репликанта или бегущего по лезвию');\n      } else {\n        this.onSuccess('Задание добавлено');\n        this.bladeRunnerName = undefined;\n        this.replicantName = undefined;\n      }\n    }\n\n    onSuccess(message) {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message,\n        life: 2000\n      });\n    }\n\n    onError(message) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error!',\n        detail: message,\n        life: 2000\n      });\n    }\n\n  }\n\n  NewBladeRunnerTaskComponent.ɵfac = function NewBladeRunnerTaskComponent_Factory(t) {\n    return new (t || NewBladeRunnerTaskComponent)(i0.ɵɵdirectiveInject(i1.MessageService), i0.ɵɵdirectiveInject(i2.DialogService));\n  };\n\n  NewBladeRunnerTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewBladeRunnerTaskComponent,\n    selectors: [[\"app-new-blade-runner-task\"]],\n    features: [i0.ɵɵProvidersFeature([DialogService])],\n    decls: 14,\n    vars: 4,\n    consts: [[\"header\", \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0435 \\u0437\\u0430\\u0434\\u0430\\u043D\\u0438\\u0435\"], [1, \"p-float-label\", \"p-input-icon-right\"], [\"id\", \"replicant-input\", \"type\", \"text\", \"pInputText\", \"\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"for\", \"replicant-input\"], [\"pTooltip\", \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0440\\u0435\\u043F\\u043B\\u0435\\u043A\\u0430\\u043D\\u0442\\u0430...\", 1, \"pi\", \"pi-user-plus\", 3, \"click\"], [1, \"p-float-label\", \"p-input-icon-right\", 2, \"margin-top\", \"2em\"], [\"id\", \"bladerunner-input\", \"type\", \"text\", \"pInputText\", \"\", 1, \"p-inputtext-lg\", 3, \"ngModel\", \"disabled\", \"ngModelChange\"], [\"for\", \"bladerunner-input\"], [\"pTooltip\", \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0431\\u0435\\u0433\\u0443\\u0449\\u0435\\u0433\\u043E \\u043F\\u043E \\u043B\\u0435\\u0437\\u0432\\u0438\\u044E...\", 1, \"pi\", \"pi-user-plus\", 3, \"click\"], [\"pButton\", \"\", \"label\", \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\", \"icon\", \"pi pi-check\", 2, \"margin-top\", \"2em\", 3, \"click\"]],\n    template: function NewBladeRunnerTaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-card\", 0)(1, \"div\")(2, \"span\", 1)(3, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function NewBladeRunnerTaskComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.replicantName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0440\\u0435\\u043F\\u043B\\u0435\\u043A\\u0430\\u043D\\u0442\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"i\", 4);\n        i0.ɵɵlistener(\"click\", function NewBladeRunnerTaskComponent_Template_i_click_6_listener() {\n          return ctx.selectReplicant();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(7, \"div\")(8, \"span\", 5)(9, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function NewBladeRunnerTaskComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.bladeRunnerName = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"label\", 7);\n        i0.ɵɵtext(11, \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0439 \\u0431\\u0435\\u0433\\u0443\\u0449\\u0438\\u0439 \\u043F\\u043E \\u043B\\u0435\\u0437\\u0432\\u0438\\u044E\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"i\", 8);\n        i0.ɵɵlistener(\"click\", function NewBladeRunnerTaskComponent_Template_i_click_12_listener() {\n          return ctx.selectBladeRunner();\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function NewBladeRunnerTaskComponent_Template_button_click_13_listener() {\n          return ctx.confirm();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.replicantName)(\"disabled\", true);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.bladeRunnerName)(\"disabled\", true);\n      }\n    },\n    styles: [\"\"]\n  });\n  return NewBladeRunnerTaskComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}