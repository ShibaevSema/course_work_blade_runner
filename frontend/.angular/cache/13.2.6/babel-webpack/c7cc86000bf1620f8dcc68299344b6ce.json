{"ast":null,"code":"import { MainSpaceDirective } from '../directives/main-space.directive';\nimport { MainTableComponent } from '../main-table/main-table.component';\nimport { VoitKampfTestTableComponent } from '../voit-kampf-test-table/voit-kampf-test-table.component';\nimport { VoitKampfTestComponent } from '../voit-kampf-test/voit-kampf-test.component';\nimport { ExistingBladeRunnersTasksComponent } from '../existing-blade-runners-tasks/existing-blade-runners-tasks.component';\nimport { NewBladeRunnerTaskComponent } from '../new-blade-runner-task/new-blade-runner-task.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"primeng/api\";\n\nfunction MainComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function MainComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.logout();\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MainComponent_ng_template_2_Template(rf, ctx) {}\n\nexport let MainComponent = /*#__PURE__*/(() => {\n  class MainComponent {\n    constructor(messageService) {\n      this.messageService = messageService;\n    }\n\n    ngOnInit() {\n      this.items = [{\n        label: 'Граждане',\n        items: [{\n          label: 'Люди',\n          command: () => this.showMainTable(\"Люди\")\n        }, {\n          label: 'Реплеканты',\n          command: () => this.showMainTable(\"Реплеканты\")\n        }, {\n          label: 'Все',\n          command: () => this.showMainTable(\"Все\")\n        }, {\n          label: 'Не установлено',\n          command: () => this.showMainTable(\"Не установлено\")\n        }]\n      }, {\n        label: 'Тесты Войта-Кампфа',\n        items: [{\n          label: 'Посмотреть пройденные',\n          command: () => this.showVoitCampfTestTable()\n        }, {\n          label: 'Провести тестирование',\n          command: () => this.showVoitCampfTest()\n        }]\n      }, {\n        label: 'Бегущие по лезвию',\n        items: [{\n          label: 'Посмотреть текущие задания',\n          command: () => this.showCurrentTasks()\n        }, {\n          label: 'Назначить новое задание',\n          command: () => this.showAddNewTask()\n        }]\n      }];\n      this.showMainTable(\"Все\");\n    }\n\n    ngAfterViewInit() {\n      this.onSuccess(\"Вход выполнен успешно!\");\n    }\n\n    onSuccess(message) {\n      this.messageService.add({\n        severity: 'success',\n        summary: 'Success',\n        detail: message,\n        life: 2000\n      });\n    }\n\n    onError(message) {\n      this.messageService.add({\n        severity: 'error',\n        summary: 'Error!',\n        detail: message,\n        life: 2000\n      });\n    }\n\n    logout() {//TODO: route to auth page\n    }\n\n    showMainTable(header) {\n      const viewContainerRef = this.mainSpaceDirective.viewContainerRef;\n      viewContainerRef.clear();\n      const componentRef = viewContainerRef.createComponent(MainTableComponent);\n      componentRef.instance.headerValue = header;\n    }\n\n    showVoitCampfTestTable() {\n      const viewContainerRef = this.mainSpaceDirective.viewContainerRef;\n      viewContainerRef.clear();\n      const componentRef = viewContainerRef.createComponent(VoitKampfTestTableComponent);\n    }\n\n    showVoitCampfTest() {\n      const viewContainerRef = this.mainSpaceDirective.viewContainerRef;\n      viewContainerRef.clear();\n      const componentRef = viewContainerRef.createComponent(VoitKampfTestComponent);\n    }\n\n    showCurrentTasks() {\n      const viewContainerRef = this.mainSpaceDirective.viewContainerRef;\n      viewContainerRef.clear();\n      const componentRef = viewContainerRef.createComponent(ExistingBladeRunnersTasksComponent);\n    }\n\n    showAddNewTask() {\n      const viewContainerRef = this.mainSpaceDirective.viewContainerRef;\n      viewContainerRef.clear();\n      const componentRef = viewContainerRef.createComponent(NewBladeRunnerTaskComponent);\n    }\n\n  }\n\n  MainComponent.ɵfac = function MainComponent_Factory(t) {\n    return new (t || MainComponent)(i0.ɵɵdirectiveInject(i1.MessageService));\n  };\n\n  MainComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainComponent,\n    selectors: [[\"app-main\"]],\n    viewQuery: function MainComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MainSpaceDirective, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mainSpaceDirective = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[3, \"model\"], [\"pTemplate\", \"end\"], [\"mainSpace\", \"\"], [\"pButton\", \"\", \"type\", \"button\", \"label\", \"\\u0412\\u044B\\u0439\\u0442\\u0438\", 3, \"click\"]],\n    template: function MainComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-menubar\", 0);\n        i0.ɵɵtemplate(1, MainComponent_ng_template_1_Template, 1, 0, \"ng-template\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, MainComponent_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"model\", ctx.items);\n      }\n    },\n    styles: [\"p-menubar[_ngcontent-%COMP%]{top:0;left:0;right:0}\"]\n  });\n  return MainComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}