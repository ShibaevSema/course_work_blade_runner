{"ast":null,"code":"import { finalize } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./loader.service\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor(loaderService) {\n      this.loaderService = loaderService;\n    }\n\n    intercept(req, next) {\n      this.loaderService.isLoading.next(true);\n      return next.handle(req).pipe(finalize(() => {\n        this.loaderService.isLoading.next(false);\n      }));\n    }\n\n  }\n\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)(i0.ɵɵinject(i1.LoaderService));\n  };\n\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}